# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 8.0.x
        
  #   - name: Restore dependencies
  #     run: dotnet restore
      
  #   - name: Build
  #     run: dotnet build --configuration Release --no-restore

  #   - name: Test
  #     run: dotnet test
  #     #--verbosity normal
      
  publish:
    name: Publish win-x64
    #needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Publish win-x64
      run: dotnet publish -c release --output ./publish /p:DebugType=None /p:DebugSymbols=false -r win-x64 --self-contained -p:PublishReadyToRun=true -p:PublishSingleFile=true ./CloudSynkr.App.csproj
      working-directory: ./CloudSynkr.App

    - name: List published content
      run: ls -l ./publish
      working-directory: ./CloudSynkr.App

    # - name: Zip content
    #   run: zip -r Synkr-win-x64.zip ./CloudSynkr.App/publish

    # - name: List published content 2
    #   run: ls -l ./publish
    #   working-directory: ./CloudSynkr.App
    
    - name: Upload release artifact for win-x64
      uses: actions/upload-artifact@v4
      with:
          name: Synkr-win-x64
          path: ./CloudSynkr.App/publish/**
          if-no-files-found: error

    
  release:
    name: Release
    #needs: [build, publish]
    needs: publish
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download math result for job 1
      uses: actions/download-artifact@v4
      with:
          name: Synkr-win-x64

    - name: List published content 2
      run: ls -R

    # - name: List published content 3
    #   run: ls -l ./CloudSynkr.App/

    # - name: List published content 5
    #   run: ls -l ./CloudSynkr.App/publish
    
    # - name: Create Release
    # - uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: "release.tar.gz,foo/*.txt"
    #     bodyFile: "body.md"


    - name: Create Release
      # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: ncipollo/release-action@v1
      with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: Synkr-win-x64.zip
          artifactContentType: "raw"
          body: ${{ github.event.head_commit.message }}
          # name: ${{ env.NIGHTLYDATETIME }}
          # omitBodyDuringUpdate: true
          # omitNameDuringUpdate: true
          # owner: tahoma2d
          # prerelease: true
          replacesArtifacts: true
          #repo: tahoma2d_nightlies
          tag: v1.0.0
          #nightly-${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}


    #- name: Create Release 2
    #  id: create_release
    #  uses: actions/create-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    tag_name: v1.0.0
    #    release_name: Release v1.0.0
    #    draft: false
    #    prerelease: false

    #- name: Upload Release Asset
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ./CloudSynkr.App/publish/Synkr-win-x64.zip
    #    asset_name: Synkr-win-x64.zip
    #    asset_content_type: application/zip
    
    

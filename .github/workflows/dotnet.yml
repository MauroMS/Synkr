# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
  #  uses: ./.github/workflows/build.yml
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --verbosity normal

      
  test:
    # uses: ./.github/workflows/test.yml
    # needs: build
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v4
      - name: Test
        run: dotnet test --verbosity normal


  publish:
    # uses: ./.github/workflows/publish.yml
    needs: [build, test]
    name: ${{ matrix.os }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [win-x64,osx-x64,linux-x64]

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Publish ${{ matrix.os }}
      run: dotnet publish -c release --output ./publish-${{ matrix.os }} /p:DebugType=None /p:DebugSymbols=false -r ${{ matrix.os }} --self-contained -p:PublishReadyToRun=true -p:PublishSingleFile=true ./CloudSynkr.App.csproj
      working-directory: ./CloudSynkr.App

    - name: List published content
      run: ls -l ./publish-${{ matrix.os }}
      working-directory: ./CloudSynkr.App
    
    - name: Upload release artifact for ${{ matrix.os }}
      uses: actions/upload-artifact@v4
      with:
          name: Synkr-${{ matrix.os }}
          path: ./CloudSynkr.App/publish-${{ matrix.os }}/
          if-no-files-found: error

    
  release:
    name: Release
    needs: [publish]
    # needs: publish
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [win-x64,osx-x64,linux-x64]

    steps:
    - name: Download math result for job 1
      uses: actions/download-artifact@v4
      with:
          name: Synkr-${{ matrix.os }}
          path: ./publish
    
    - name: Zip content
      run: zip -r Synkr-${{ matrix.os }}.zip ./publish

    - name: List published content 5
      run: ls -R

    - name: Create Release
      # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: ncipollo/release-action@v1
      with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: Synkr-${{ matrix.os }}.zip
          artifactContentType: "raw"
          body: ${{ github.event.head_commit.message }}
          # name: ${{ env.NIGHTLYDATETIME }}
          # omitBodyDuringUpdate: true
          # omitNameDuringUpdate: true
          # owner: tahoma2d
          # prerelease: true
          replacesArtifacts: true
          #repo: tahoma2d_nightlies
          tag: v1.0.0
          #nightly-${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}